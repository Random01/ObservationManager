(function(b){b.factory("_",["$window",function(a){return a._}]);b.run(["$templateCache",function(a){a.put("scripts/main/main.html",'<div><a href="#/scopes">Scopes</a> <a href="#/observations">Observations</a></div>');a.put("scripts/observation/observation/observations.html",'<div><a href="#/observations/create">Add new Observation</a></div>');a.put("scripts/observation/scope/scope.html",'<div><div>{{\'OM.MODEL\'|translate}}</div><input type="text" ng-model="scope.model"/><div>{{\'OM.APERTURE\'|translate}}</div><input type="text" ng-model="scope.aperture"/><div>{{\'OM.FOCAL_LENGTH\'|translate}}</div><input type="text" ng-model="scope.focalLength"/></div><div><button ng-click="create()">{{\'OM.ADD\'|translate}}</button> <button ng-click="cancel()">{{\'OM.CANCEL\'|translate}}</button></div>');
a.put("scripts/observation/scope/scopes.html",'<div><a href="#scopes/create">Add new Scope</a><div ng-repeat="scope in scopes"><div>{{scope.model}}</div><div><a href="#scopes/edit">Edit</a></div><div><a href="#scopes/delete">Delete</a></div></div></div>');a.put("scripts/observation/session/session.html",'<div class="om-session-form" ng-controller="omSessionController"><div>{{\'OM.LANGUAGE\'|translate}}</div><select ng-options="language.text for language in languages" ng-model="session.lang"></select><div>{{\'OM.BEGIN\'|translate}}</div><input type="text" ng-model="session.begin"/><div>{{\'OM.END\'|translate}}</div><input type="text" ng-model="session.end"/><div>{{\'OM.WEATHER\'|translate}}</div><textarea ng-model="session.weather"></textarea><div>{{\'OM.EQUIPMENT\'|translate}}</div><textarea ng-model="session.equipment"></textarea><div>{{\'OM.COMMENTS\'|translate}}</div><textarea ng-model="session.comments"></textarea><div>{{\'OM.SITE\'|translate}}</div><select ng-options="site.name for site in sites" ng-model="session.site"></select><button>{{\'OM.NEW_SITE\'|translate}}</button></div>');
a.put("scripts/observation/site/site.html",'<div class="om-site-form" ng-controller="omSiteController"><div>{{\'OM.NAME\'|translate}}</div><input type="text" class="om-textbox" ng-model="site.name"/><div>{{\'OM.LONGITUDE\'|translate}}</div><input type="text" class="om-textbox" ng-model="site.longitude.value"/><div>{{\'OM.LATITUDE\'|translate}}</div><input type="text" class="om-textbox" ng-model="site.latitude.value"/><div>{{\'OM.TIME_ZONE\'|translate}}</div><input type="text" class="om-textbox" ng-model="site.timezone"/></div>')}])})(angular.module("observationManager.common",
[]));
(function(b){b.factory("omObservationManager",[function(){return{getAllObservations:function(a){}}}]);b.factory("omObservation",function(){var a=function(){};a.prototype.observer=null;a.prototype.site=null;a.prototype.session=null;a.prototype.target=null;a.prototype.begin=null;a.prototype.scope=null;return a});b.controller("omObservationsController",["$scope","omObservationManager",function(a,c){a.observations=[]}]);b.controller("omScopeController",["$scope","omScope","omScopeManager","$location",function(a,
c,b,d){a.scope=new c;a.create=function(){a.scope.isValid()&&b.add(a.scope).then(function(){d.path("scopes")})};a.cancel=function(){d.path("scopes")}}]);b.factory("omScopeManager",["$http","$q","_",function(a,c,b){a={};var d=[];a.getAllScopes=function(a){return c.when(d)};a.add=function(a){d.push(a);return c.when()};a.update=function(a){return c.when()};a.delete=function(a){return c.when()};a.getScopeById=function(a){return c.when()};return a}]);b.factory("omScope",function(){var a=function(a){a&&
(a.hasOwnProperty("model")&&(this.model=a.model),a.hasOwnProperty("aperture")&&(this.aperture=a.aperture),a.hasOwnProperty("focalLength")&&(this.focalLength=a.focalLength))};a.prototype.model=null;a.prototype.aperture=null;a.prototype.focalLength=null;a.prototype.isValid=function(){return null!=this.model&&""!=this.model};return a});b.controller("omScopesController",["$scope","omScopeManager",function(a,c){c.getAllScopes().then(function(c){a.scopes=c})}]);b.controller("omSessionController",["$scope",
"omSession",function(a,c){a.languages=[{id:"ru",text:"Russian"},{id:"en",text:"English"}];a.session=new c({id:"some guid",lang:"en",begin:new Date,end:new Date,weather:"Cloudy",equipment:"Tea",comments:"Some comments"})}]);b.factory("omSession",function(){var a=function(a){a&&(a.hasOwnProperty("id")&&(this.id=a.id),a.hasOwnProperty("lang")&&(this.lang=a.lang),a.hasOwnProperty("begin")&&(this.begin=a.begin),a.hasOwnProperty("end")&&(this.end=a.end),a.hasOwnProperty("site")&&(this.site=a.site),a.hasOwnProperty("weather")&&
(this.weather=a.weather),a.hasOwnProperty("equipment")&&(this.equipment=a.equipment),a.hasOwnProperty("comments")&&(this.comments=a.comments))};a.prototype.id="";a.prototype.lang="";a.prototype.begin=null;a.prototype.end=null;a.prototype.site=null;a.prototype.weather="";a.prototype.equipment="";a.prototype.comments="";return a});b.controller("omSiteController",["$scope","omSite",function(a,c){a.site=new c({id:"some guid",name:"Saratov",longitude:{unit:"deg",value:51.53},latitude:{unit:"deg",value:46.02},
timezone:2})}]);b.factory("omSite",function(){var a=function(a){a&&(a.hasOwnProperty("id")&&(this.id=a.id),a.hasOwnProperty("name")&&(this.name=a.name),a.hasOwnProperty("longitude")&&(this.longitude=a.longitude),a.hasOwnProperty("latitude")&&(this.latitude=a.latitude),a.hasOwnProperty("timezone")&&(this.timezone=a.timezone))};a.prototype.id="";a.prototype.name="";a.prototype.longitude=null;a.prototype.latitude=null;a.prototype.timezone=0;return a})})(angular.module("observationManager.observation",
[]));
(function(b){b.config(["$translateProvider","$windowProvider",function(a,b){var e=b.$get();a.preferredLanguage(e.navigator.userLanguage||e.navigator.language);a.fallbackLanguage("en-US")}]);b.config(["$translateProvider",function(a){a.translations("en-US",{OM:{NAME:"Name",LONGITUDE:"Longitude",LATITUDE:"Latitude",TIME_ZONE:"Timezone",LANGUAGE:"Language",BEGIN:"Begin",END:"End",WEATHER:"Weather",EQUIPMENT:"Equipment",COMMENTS:"Comments",SITE:"Site",NEW_SITE:"New Site",MODEL:"Model",APERTURE:"Aperture",FOCAL_LENGTH:"Focal length",
ADD:"Add",CANCEL:"Cancel"}})}])})(angular.module("observationManager.localization",["pascalprecht.translate"]));
(function(b){b.config(["$routeProvider",function(a){a.when("/observations",{templateUrl:"scripts/observation/observation/observations.html",controller:"omObservationsController"}).when("/scopes/create",{templateUrl:"scripts/observation/scope/scope.html",controller:"omScopeController"}).when("/scopes/:scopeId",{templateUrl:"scripts/observation/scope/scope.html",controller:"omScopeController"}).when("/scopes",{templateUrl:"scripts/observation/scope/scopes.html",controller:"omScopesController"}).otherwise({redirectTo:"/"})}]);
b.controller("omMainController",["$scope","$translate",function(a,b){}])})(angular.module("observationManager.app",["ngRoute","ngResource","observationManager.common","observationManager.observation","observationManager.localization"]));
